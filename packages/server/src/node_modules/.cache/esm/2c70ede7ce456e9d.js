let express,cors,ApolloServer,gql,typeDefs,resolvers;_ce4‍.w("express",[["default",["express"],function(v){express=v}]]);_ce4‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_ce4‍.w("apollo-server-express",[["ApolloServer",["ApolloServer"],function(v){ApolloServer=v}],["gql",["gql"],function(v){gql=v}]]);_ce4‍.w("./graphql/typeDefs",[["default",["typeDefs"],function(v){typeDefs=v}]]);_ce4‍.w("./graphql/resolvers",[["default",["resolvers"],function(v){resolvers=v}]]);





const app = express();

async function startServer() {
  const server = new ApolloServer({
    typeDefs,
    resolvers,
  });

  await server.start();

  server.applyMiddleware({
    app,
    cors: { origin: "http://localhost:3000" },
    bodyParserConfig: true,
  });
}

startServer();

const PORT = process.env.PORT ? parseInt(process.env.PORT) : 8000;
const HOSTNAME = process.env.HOSTNAME || "127.0.0.1";

app.listen(PORT, HOSTNAME, () => {
  console.log(`Server is listening at http://127.0.0.1:${PORT}`);
});
